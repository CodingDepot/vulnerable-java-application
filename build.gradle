plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'java'

	//id 'com.github.spotbugs' version '6.0.11'
	id 'jacoco'
	//id 'org.sonarqube' version '5.0.0.4638'
	id "de.undercouch.download" version "5.3.0"
}

group = 'com.datadoghq.workshops'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'ch.qos.logback:logback-classic:1.2.11'
	implementation 'net.logstash.logback:logstash-logback-encoder:7.2'
	implementation 'org.projectlombok:lombok:1.18.22'
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Added for testing
	//spotbugs 'com.github.spotbugs:spotbugs:4.8.4'
	//spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.13.0'
}

/*
tasks.spotbugsMain {
	ignoreFailures = true
	reports.create("sarif") {
		required = true
		outputLocation = file("$rootDir/reports/spotbugs.sarif")
	}
	reports.create("html") {
		required = true
		outputLocation = file("$rootDir/reports/spotbugs.html")
	}
}
*/

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		xml.outputLocation = file("$rootDir/reports/coverage.xml")
	}
}

task downloadNewrelic(type: Download) {
    mkdir 'newrelic'
    src 'https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip'
    dest file('newrelic')
}

task unzipNewrelic(type: Copy) {
    from zipTree(file('newrelic/newrelic-java.zip'))
    into rootDir
}

/*
sonar {
	properties {
		property("sonar.projectKey", "Vulnerable-Java-App")
		property("sonar.projectName", "Vulnerable Java App")
		// add host URL and TOKEN in command line
	}
}
*/
